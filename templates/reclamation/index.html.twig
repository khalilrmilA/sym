{% extends 'base.html.twig' %}

{% block title %}add ReclamationController!
{% endblock %}

{% block body %}
	<!-- start page title area -->
	<div class="rn-breadcrumb-inner ptb--30">
		<div class="container">
			<div class="row align-items-center">
				<div class="col-lg-6 col-md-6 col-12">
					<h5 class="title text-center text-md-start">Add Reclamation
					</h5>
				</div>
				<div class="col-lg-6 col-md-6 col-12">
					<ul class="breadcrumb-list">
						<li class="item">
							<a href="index.html">Home</a>
						</li>
						<li class="separator">
							<i class="feather-chevron-right"></i>
						</li>
						<li class="item current">Reclamation</li>
						{% for message in app.flashes('success') %}
							<div class="alert alert-success">
								{{message}}
							</div>
						{% endfor %}

					</ul>
				</div>
			</div>
		</div>
	</div>
	<!-- end page title area -->

	<!-- create new product area -->
	<div class="create-area rn-section-gapTop">
		<div class="container">
			<div class="row g-5">
				<div class="col-lg-3 offset-1 ml_md--0 ml_sm--0">
					<form id="form" name="reclamation" method="post" enctype="multipart/form-data">
						<div class="upload-area">
							<div class="upload-formate mb--30">
								<h6 class="title">
									Upload file
								</h6>
								<p class="formate">
									Drag or choose your file to upload
								</p>
							</div>
							<div class="brows-file-wrapper">
								<input type="file" name="reclamation[imageFile][file]" id="reclamation_imageFile_file" required="required" accept="image/*" class="inputfile"/>
								<img id="createfileImage" src="{{ asset('/assets/images/portfolio/1.jpeg') }}" alt data-black-overlay="6">
								<label for="reclamation_imageFile_file" title="No File Choosen">
									<i class="feather-upload"></i>
									<span class="text-center">Choose a File</span>
									<p class="text-center mt--9">PNG, GIF, WEBP, MP4 or MP3.
										<br>
										Max 1Gb.</p>
								</label>
							</div>
						</div>

						<script>
							const input = document.getElementById('reclamation_imageFile_file');
const img = document.getElementById('createfileImage');

input.addEventListener('change', function () {
if (input.files && input.files[0]) {
const reader = new FileReader();

reader.onload = function (e) {
img.setAttribute('src', e.target.result);
}

reader.readAsDataURL(input.files[0]);
}
});
						</script>
						<div class="mt--100 mt_sm--30 mt_md--30 d-none d-lg-block">
							<h5>Note:
							</h5>
							<span>enjoy our Service
							</span>
							<br>
							<span>You will receive our reponse soon
							</span>
						</div>
					</div>
					<div class="col-lg-7">
						<div class="form-wrapper-one">
							<div class="col-md-12">
								<div class="input-box pb--20">
									<div>
										<label for="reclamation_privateKey" class="required">Private Key</label>
										<input type="text" id="reclamation_privateKey" name="reclamation[privateKey]"/>
									<span class="error-message"></span>
										<div class="tooltip">
											<i class="fas fa-info-circle"></i>
											<span class="tooltiptext">Must be a number</span>
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-12">
								<div class="input-box pb--20">
									<div>
										<label for="reclamation_subject" class="required">Subject</label>
										<input type="text" id="reclamation_subject" name="reclamation[subject]"/>
									<span class="error-message"></span>
										<div class="tooltip">
											<i class="fas fa-info-circle"></i>
											<span class="tooltiptext">Must be a string</span>
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-12">
								<div class="input-box pb--20">
									<div>
										<label for="reclamation_description" class="required">Description</label>
										<textarea id="reclamation_description" name="reclamation[description]"></textarea>
									<span class="error-message"></span>
										<div class="tooltip">
											<i class="fas fa-info-circle"></i>
											<span class="tooltiptext">Must be a string</span>
										</div>
									</div>
								</div>
							</div>
							<span></span>
							<span></span>
							<div class="col-md-12">
								<div class="input-box">
									<button type="submit" class="btn btn-primary" id="submit-button1">Submit</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<input type="hidden" id="reclamation__token" name="reclamation[_token]" value="edfefdd8a408443a012c.c_gIArByPEgON4s4Sv8_WXHe6FRKy7Ah9XqrA6GoLmk.PcxBY9cWTX9gBthxC8tSCQHp0SAsifMRmBvTNtDwTCA3sHt7xB9lJUF23g"/>
	</form>

	<script>
		(function () {
		  const form = document.getElementById('form');
		  const submitButton = document.getElementById('submit-button1');
	  
		  // Add a submit event listener to the form element
		  form.addEventListener('submit', function (event) {
			event.preventDefault(); // Prevent the default form submit action
			
			// Check if the form is valid
			if (form.checkValidity()) {
			  const formData = new FormData(form);
			  fetch('/reclamation', {
				method: 'POST',
				body: formData
			  }).then(response => {
				if (response.ok) { // Check if the response status is OK
				  return response.text();
				} else {
				  throw new Error('Server responded with a status: ' + response.status);
				}
			  }).then(data => {
				// If we get here, the submission was successful
				Swal.fire({
				  title: 'Success!',
				  text: 'Your reclamation has been submitted.',
				  icon: 'success',
				  confirmButtonText: 'Thank You'
				}).then(() => {
				  form.reset(); // Clear all the form fields after successful submission
				});
			  }).catch(error => {
				// If we get here, there was an error with the submission
				console.error('Submission error:', error);
				Swal.fire({
				  title: 'Error!',
				  text: 'There was an error submitting your reclamation.',
				  icon: 'error',
				  confirmButtonText: 'OK'
				});
			  });
			}
		  });
	  
		  // This click event listener seems unnecessary as the submit event above already handles the form submission
		  submitButton.addEventListener('click', function (event) {
			if (!form.checkValidity()) {
			  form.reportValidity(); // This will display the browser's default validation messages
			}
		  });
		})();
	  </script>
	  
	  
	<script>
const primaryKeyRegex = /^[0-9]+$/; // Matches a string of one or more digits
const subjectRegex = /^[A-Za-z\s]+$/; // Matches a string of letters (both cases) and spaces
const descriptionRegex = /^[A-Za-z0-9\s.,!?()-]+$/;
// Matches letters, numbers, spaces, and some punctuation

// Update your validation functions accordingly
function validateSubject() {
const subjectInput = document.getElementById('reclamation_subject');
const subject = subjectInput.value.trim();
if (subjectRegex.test(subject)) {
subjectInput.style.borderColor = 'green';
subjectInput.setCustomValidity('');
return true;
} else {
subjectInput.style.borderColor = 'red';
subjectInput.setCustomValidity('Subject is not valid');
return false;
}
}

function validateDescription() {
const descriptionInput = document.getElementById('reclamation_description');
const description = descriptionInput.value.trim();
if (descriptionRegex.test(description)) {
descriptionInput.style.borderColor = 'green';
descriptionInput.setCustomValidity('');
return true;
} else {
descriptionInput.style.borderColor = 'red';
descriptionInput.setCustomValidity('Description is not valid');
return false;
}
}

function validatePrivateKey() {
const privateKeyInput = document.getElementById('reclamation_privateKey');
const privateKey = privateKeyInput.value.trim();
if (primaryKeyRegex.test(privateKey)) {
privateKeyInput.style.borderColor = 'green';
privateKeyInput.setCustomValidity('');
return true;
} else {
privateKeyInput.style.borderColor = 'red';
privateKeyInput.setCustomValidity('Private key is not valid');
return false;
}
}
document.getElementById('reclamation_privateKey').addEventListener('input', primaryKeyRegex);
document.getElementById('reclamation_subject').addEventListener('input', subjectRegex);
document.getElementById('reclamation_description').addEventListener('input', descriptionRegex);

	</script>

{% endblock %}
